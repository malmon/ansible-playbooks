- hosts: docker

  tasks:

  - name: Install Required Packages
    pip:
      name:
        - boto

  - name: Get Current Pulbic IP Address
    ipify_facts:
    register: public_ip_raw
  
  - name: Set A Record Fact
    set_fact:
      public_ip: "{{ public_ip_raw .ansible_facts.ipify_public_ip}}"

  - name: Public IP
    debug: 
      msg: "Public IP={{ public_ip }}"

  - name: Get Current A Record IP Address In Route53
    route53_info:
      query: record_sets
      hosted_zone_id: "{{ hosted_zone_id }}"
      start_record_name: "{{ record_name }}"
      type: A
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
    register: rec

  - name: Set A Record Fact
    set_fact:
      record_ip: "{{ item.ResourceRecords[0].Value }}"
    with_items: "{{ rec.ResourceRecordSets }}"
    when: item.Type is defined and item.Type == "A"

  - name: A Records IP
    debug:
      msg: "A Records IP={{ record_ip }}"

  - debug:
      msg: "Public and A Records IP Matches Will Not Update"
    when: public_ip == record_ip

  - meta: end_play
    when: public_ip == record_ip

  - debug:
      msg: "Updating A Record To Match Publc"
  
  - name: Update A Record
    route53:
      state: present
      hosted_zone_id: "{{ hosted_zone_id }}"
      record: "{{ record_name }}"
      type: A
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      ttl: 300
      value: "{{ public_ip }}"
      wait: yes
      overwrite: yes

  - name: Get Current A Record IP Address In Route53
    route53_info:
      query: record_sets
      hosted_zone_id: "{{ hosted_zone_id }}"
      start_record_name: "{{ record_name }}"
      type: A
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
    register: new_rec

  - name: Set A Record Fact
    set_fact:
      new_record_ip: "{{ item.ResourceRecords[0].Value }}"
    with_items: "{{ new_rec.ResourceRecordSets }}"
    when: item.Type is defined and item.Type == "A"

  - fail:
      msg: "Updated A Record IP and Public IP Do Not Match soemthing went wrong"
    when: public_ip != new_record_ip